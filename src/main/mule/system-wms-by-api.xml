<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd ">
    <http:listener-config name="system-wms-by-api-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8082" protocol="HTTPS" tlsContext="TLS_Context" />
    </http:listener-config>
    <apikit:config name="system-wms-by-api-config" api="resource::ab8117f6-d718-4307-b5f7-03262d589cd0:system-wms-by-api:1.0.48:raml:zip:system-wms-by-api.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <flow name="system-wms-by-api-main">
        <http:listener config-ref="system-wms-by-api-httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="system-wms-by-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "APIKIT-400",
			"user_error_description": "The server cannot or will not process the request due to something that is perceived to be a client error",
			"system_error_description": "Bad Request"
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[400]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "APIKIT-404",
			"user_error_description": "The origin server did not find a current representation for the target resource or is not willing to disclose that one exists",
			"system_error_description": "Not Found"
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[404]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "APIKIT-405",
			"user_error_description": "The method received in the request-line is known by the origin server but not supported by the target resource",
			"system_error_description": "Method Not Allowed"
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[405]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "APIKIT-406",
			"user_error_description": "The target resource does not have a current representation that would be acceptable to the user agent, according to the proactive negotiation header fields received in the request1, and the server is unwilling to supply a default representation",
			"system_error_description": "Not Acceptable"
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[406]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "APIKIT-415",
			"user_error_description": "The origin server is refusing to service the request because the payload is in a format not supported by this method on the target resource",
			"system_error_description": "Unsupported Media Type"
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[415]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
	
		"completed_succesfully": "false",
		"error": {
			"error_type": "APIKIT-501",
			"user_error_description": "The server does not support the functionality required to fulfill the request",
			"system_error_description": "Not Implemented"
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[501]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="9ef3e267-0653-4e53-954a-eb12314057fe" type="ANY">
                <ee:transform doc:name="Transform Message" doc:id="9d19b0e7-fe21-4085-badb-3f3af6599792">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  "traxion_response": {
    "completed_succesfully": false,
    "error": {
      "operation": "System-Wms",
      "error_type": "500",
      "system_error_description": "INTERNAL_SERVER_ERROR - 500",
      "user_error_description": error
    }
  }
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[500]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="system-wms-by-api-console">
        <http:listener config-ref="system-wms-by-api-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="system-wms-by-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="post:\wms\article:system-wms-by-api-config">
        <flow-ref doc:name="Call to orchestrators-update-article" doc:id="211af8c3-a261-4958-9c9c-c44e2e04aca5" name="orchestrators-update-article" />
    </flow>
    <flow name="post:\wms\availability:system-wms-by-api-config">
        <flow-ref doc:name="Call to orchestrators-update-availability" doc:id="ff86a9bf-159d-4542-a74a-543835b94c66" name="orchestrators-update-availability" />
    </flow>
    <flow name="post:\wms\bill_lading_details:system-wms-by-api-config">
        <flow-ref doc:name="Call to orchestrators-bill-lading-details" doc:id="b15cb894-eb32-4432-8437-1060272e2de2" name="orchestrators-bill-lading-details" />
    </flow>
    <flow name="post:\wms\order:system-wms-by-api-config">
        <flow-ref doc:name="Call to orchestrators-update-order" doc:id="4fc8c8e0-7f90-49d3-ab51-45480372c1ac" name="orchestrators-update-order" />
    </flow>
    <flow name="post:\wms\volumetry:system-wms-by-api-config">
        <flow-ref doc:name="Call to orchestrators-post-volumetry" doc:id="42fcd6c0-82d8-43f2-b3d3-bb331f294197" name="orchestrators-post-volumetry" />
        <!-- [STUDIO:"Transform Message"]		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
{
    "traxion_response": {
        "completed_succesfully": "true",
        "response": {
            "message": "successful",
            "data": {}
        }
    }
}]]></ee:set-payload>
            </ee:message>
        </ee:transform> [STUDIO] -->
    </flow>
    <flow name="post:\wms\logistics_footprint:system-wms-by-api-config">
        <flow-ref doc:name="Call to orchestrators-logistics-footprint" doc:id="84c82d1d-afe8-44f8-b433-ae9fda9d382f" name="orchestrators-logistics-footprint" />
    </flow>
    <flow name="post:\wms\box_quantity:system-wms-by-api-config">
        <flow-ref doc:name="Call to orchestrators-box-quantity" doc:id="54fcd5b6-1449-45e5-8e93-cc0feecda1ba" name="orchestrators-box-quantity" />
    </flow>
    <flow name="post:\wms\box:application\json:system-wms-by-api-config">
        <flow-ref doc:name="Call to orchestrators-box-postSub_Flow" doc:id="7ef8aef2-61fa-4c95-89cc-a07554ef2ce4" name="orchestrators-box-postSub_Flow" />
    </flow>
    <flow name="get:\wms\download_sequence:system-wms-by-api-config">
        <flow-ref doc:name="Call to orchestrators-shipment-status" doc:id="6f6b82d4-cf73-4596-95c1-577e036ecde9" name="orchestrators-shipment-status" />
    </flow>
    <flow name="get:\wms\order\(lodnum)\box:system-wms-by-api-config">
        <ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	lodnum: attributes.uriParams.'lodnum',
	wh_id: "AVIOR-27"
}]]></ee:set-payload>
            </ee:message>
            <ee:variables>
                <ee:set-variable variableName="lodnum"><![CDATA[attributes.uriParams.'lodnum']]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <flow-ref doc:name="orchestrators-get-boxes-by-orderId-main" doc:id="57322f4b-6535-43e9-b178-a7f1fe461043" name="orchestrators-get-boxes-by-orderId-main" />
    </flow>
    <flow name="get:\wms\lines:system-wms-by-api-config">
        <logger level="INFO" doc:name="Logger" doc:id="8e88ad53-da9a-4d1f-ba65-1a2d4ebfcfab" message="#[&quot;Obteniendo linea del order_number: &quot; ++ attributes.queryParams.order_number]" />
        <flow-ref doc:name="orchestrator-get-lines-Flow" doc:id="8a766863-ae56-4819-b735-1ad1fbccbe7b" name="orchestrator-get-lines-Flow" />
    </flow>
    <flow name="post:\wms\order\split:application\json:system-wms-by-api-config">
        <!-- [STUDIO:"Logger"]		<logger level="INFO" doc:name="Logger" doc:id="098db6e5-cc90-4f01-a0de-e4c04bb08850" message='#["Obteniendo numero de splits del order_number: " + payload.orders as String]' /> [STUDIO] -->
        <flow-ref doc:name="Call to orchestrator-get-split-Flow" doc:id="b66dfc9e-8191-4bf7-afc6-17df13eb6c74" name="orchestrator-get-split-Flow" />
    </flow>
    <flow name="post:\wms\order\split\validation:application\json:system-wms-by-api-config">
        <!-- [STUDIO:"Logger"]		<logger level="INFO" doc:name="Logger" doc:id="43b76816-ceb6-4617-9f00-7fd2ad9a559a" message='#["Obteniendo validacion de split del order_number: " + payload.orders as String]' /> [STUDIO] -->
        <flow-ref doc:name="Call to orchestrator-get-split-validation-Flow" doc:id="5ae1f885-543f-4aaa-96a2-1fd8ea17e2df" name="orchestrator-get-split-validation-Flow" />
    </flow>
    <flow name="get:\wms\provider\(provider_id):system-wms-by-api-config">
        <ee:transform doc:name="Transform Message">
            <ee:variables>
                <ee:set-variable variableName="provider_id"><![CDATA[%dw 2.0
output application/json
---
attributes.uriParams.'provider_id']]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <flow-ref doc:name="orchestrator-get-provider" doc:id="340cb540-4eff-488d-8012-cde1f0d0f983" name="orchestrator-get-provider" />
    </flow>
    <flow name="get:\wms\provider:system-wms-by-api-config">
        <ee:transform doc:name="Transform Message">
            <ee:message />
            <ee:variables>
                <ee:set-variable variableName="providers_id"><![CDATA[%dw 2.0
output application/json
---
(attributes.queryParams.providers_id default "") replace "," with ("','")]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <flow-ref doc:name="orchestrator-get-provider" doc:id="6f79b76e-80b1-4d9c-9752-5441d71798c8" name="orchestrator-get-providersarray" />
    </flow>
    <flow name="get:\wms\inventory:system-wms-by-api-config">
        <flow-ref doc:name="call orchestrator-get-inventory-report" doc:id="60b39018-c7ab-4979-98be-0852e4421fad" name="orchestrator-get-inventory-report" />
    </flow>
    <flow name="post:\wms\bill_lading_details\load:application\json:system-wms-by-api-config">
        <flow-ref doc:name="Call to orchestrators-bill-lading-load-details" doc:id="620bef03-3c02-4163-8d93-efa99aca1958" name="orchestrators-bill-lading-load-details" />
    </flow>
    <flow name="get:\wms\charge_id_validation\(chargeId):system-wms-by-api-config">
        <ee:transform doc:name="Transform Message">
            <ee:variables>
                <ee:set-variable variableName="chargeId">attributes.uriParams.'chargeId'</ee:set-variable>
            </ee:variables>
        </ee:transform>
        <flow-ref doc:name="Call-orchestrator-get-charge-id-validation" doc:id="451b5de1-5196-4763-95ac-ebd4e5491278" name="orchestrator-get-charge-id-validation" />
    </flow>
    <flow name="post:\wms\order\split\sku:application\json:system-wms-by-api-config">
		<flow-ref doc:name="orchestrator-get-split-sku-main" doc:id="98198d51-d2f6-44da-b86e-24538718f518" name="orchestrator-get-split-sku-main" />
    </flow>
</mule>
