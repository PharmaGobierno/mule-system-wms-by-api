<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<sub-flow name="orchestrators-box-postSub_Flow" doc:id="c301c430-9da4-4d02-bacb-e332b697fc0f" >
		<ee:transform doc:name="Set LPN" doc:id="1f82480a-b923-4ab4-bb07-c2a8dc69a03a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.code]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Set Query" doc:id="881e8234-6c2e-44f0-b055-fead9264b133" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="query" ><![CDATA[%dw 2.0
import modules::pharma
output application/json
var schema = pharma::getSchema(attributes.queryParams.customer_name, p('database.wms.blueyonder.schema'),p('database.wms.mega.schema'))
---
"select *
from
(select /*distinct ordnum*/ listagg (distinct ordnum,',') as ordnum
  from "++ schema ++".inventory_pckwrk_view ipv3
 where lodnum = :lodnum
   and ipv3.subnum like 'CTN%') delivery,
(select count(distinct pv2.ctnnum) as delvSurtidosEnPalet
from "++ schema ++".pckwrk_view pv1
join "++ schema ++".pckwrk_view pv2
on pv1.schbat = pv2.schbat
        and pv1.ordnum = pv2.ordnum
        and pv1.ordlin = pv2.ordlin
        and pv1.ordsln = pv2.ordsln
        and pv1.subnum = pv2.ctnnum
join "++ schema ++".inventory_view iv
on pv2.wrkref = iv.wrkref
        and pv2.wrkref_dtl = iv.wrkref_dtl
        and pv2.ship_line_id = iv.ship_line_id
        and pv2.ctnnum = iv.subnum
        and pv2.wh_id = iv.wh_id
        and pv2.prt_client_id = iv.prt_client_id
        and pv2.prtnum = iv.prtnum
JOIN "++ schema ++".locmst lm
on iv.wh_id = lm.wh_id
        and iv.stoloc = lm.stoloc
where pv1.ordnum in (select distinct ordnum
                      from "++ schema ++".inventory_pckwrk_view ipv3
                     where lodnum = :lodnum
                       and ipv3.subnum like 'CTN%')
        and pv1.wrktyp = 'K'
        and pv1.appqty = 1
        and lm.mov_zone_id in ('10093', '10036')) inPal,
(select count(distinct pv2.ctnnum) as delvSurtidos
from "++ schema ++".pckwrk_view pv1
join "++ schema ++".pckwrk_view pv2
on pv1.schbat = pv2.schbat
        and pv1.ordnum = pv2.ordnum
        and pv1.ordlin = pv2.ordlin
        and pv1.ordsln = pv2.ordsln
        and pv1.subnum = pv2.ctnnum
join "++ schema ++".inventory_view iv
on pv2.wrkref = iv.wrkref
        and pv2.wrkref_dtl = iv.wrkref_dtl
        and pv2.ship_line_id = iv.ship_line_id
        and pv2.ctnnum = iv.subnum
        and pv2.wh_id = iv.wh_id
        and pv2.prt_client_id = iv.prt_client_id
        and pv2.prtnum = iv.prtnum
JOIN "++ schema ++".locmst lm
on iv.wh_id = lm.wh_id
        and iv.stoloc = lm.stoloc
where pv1.ordnum in (select distinct ordnum
                      from "++ schema ++".inventory_pckwrk_view ipv3
                     where lodnum = :lodnum
                       and ipv3.subnum like 'CTN%')
        and pv1.wrktyp = 'K'
        and pv1.appqty = 1
        and lm.mov_zone_id not in ('10093', '10036')) inPal2,
(select count(*) delvSinSurtir
   from "++ schema ++".pckwrk_view
  where ordnum in (select distinct ordnum
                    from "++ schema ++".inventory_pckwrk_view ipv3
                   where lodnum = :lodnum
                     and ipv3.subnum like 'CTN%')
    and wrktyp = 'K'
    and appqty = 0) Mis,
(select count(distinct pv2.ctnnum) lpnSurtidosEnPalet
   from "++ schema ++".pckwrk_view pv1
   join "++ schema ++".pckwrk_view pv2
     on pv1.schbat = pv2.schbat
    and pv1.ordnum = pv2.ordnum
    and pv1.ordlin = pv2.ordlin
    and pv1.ordsln = pv2.ordsln
    and pv1.subnum = pv2.ctnnum
   join "++ schema ++".inventory_view iv
     on pv2.wrkref = iv.wrkref
    and pv2.wrkref_dtl = iv.wrkref_dtl
    and pv2.ship_line_id = iv.ship_line_id
    and pv2.ctnnum = iv.subnum
    and pv2.wh_id = iv.wh_id
    and pv2.prt_client_id = iv.prt_client_id
    and pv2.prtnum = iv.prtnum
   JOIN "++ schema ++".locmst lm
     on iv.wh_id = lm.wh_id
    and iv.stoloc = lm.stoloc
  where IV.lodnum = :lodnum
    and pv1.wrktyp = 'K'
    and pv1.appqty = 1
    and lm.mov_zone_id in ('10093','10036')) a,
(select count(*) lpnSinSurtir
   from "++ schema ++".pckwrk_view pv
   join "++ schema ++".inventory_pckwrk_view ipv
     on pv.ordnum = ipv.ordnum
    and ipv.lodnum != pv.lodnum
  where pv.wrktyp = 'K'
    and pv.appqty = 0
    and ipv.lodnum = :lodnum) b,
(select count(distinct ipv2.ctnnum) lpnSurtidos
   from "++ schema ++".inventory_pckwrk_view ipv2
   join "++ schema ++".locmst
     on ipv2.stoloc = locmst.stoloc
    and ipv2.wh_id = locmst.wh_id
    and locmst.mov_zone_id not in ('10093', '10036')
        /*and ipv.lodnum != ipv2.lodnum*/
  where ipv2.ordnum in (select distinct ordnum
                          from "++ schema ++".inventory_pckwrk_view ipv3
                         where lodnum = :lodnum)
    and ipv2.subnum like 'CTN%')"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="client-db-get-lpn-full" doc:id="f619373a-310e-459e-af52-6ba2372e3955" name="common-pharma-selectSub_Flow" />
		<ee:transform doc:name="Set Response" doc:id="31217aa4-0b5d-4000-998e-48776c7178af" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-payload value='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;    lpn_pending_pick: payload[0].LPNSINSURTIR,&#10;    lpn_pending_picked: payload[0].LPNSURTIDOS,&#10;    lpn_assortments_pallet: payload[0].LPNSURTIDOSENPALET,&#10;    delivery_pending_pick: payload[0].DELVSINSURTIR,&#10;    delivery_pending_picked: payload[0].DELVSURTIDOS,&#10;    delivery_assortments_pallet: payload[0].DELVSURTIDOSENPALET&#10;}]' doc:name="Set Response1" doc:id="101f21eb-8d6c-4a4c-a4d5-e820385c1529" />
	</sub-flow>
	<sub-flow name="orchestrators-box-main" doc:id="c74a952d-17fd-4f17-83ac-f3bad499ba41" >
		<choice doc:name="Choice" doc:id="b830f076-8ca9-4b03-8059-7f1ac80c1f27" >
			<when expression="#[payload.type_box == 'delivery']">
				<flow-ref doc:name="Call to orchestrators-get-surtidos" doc:id="536f47f3-e600-47eb-84f8-8c162fd4ed4b" name="orchestrators-get-surtidos" target="surtidosResponse" />
				<flow-ref doc:name="Call to orchestrators-get-lpn" doc:id="a9d60b51-3fe0-47c2-80da-979ea0d441cb" name="orchestrators-get-lpn" target="responseLPN" />
				<flow-ref doc:name="Call to orchestrators-box-set-response" doc:id="383dc147-7380-4dea-947e-3423ca09a8ae" name="orchestrators-box-set-response" />
			</when>
			<otherwise >
				<flow-ref doc:name="Call to orchestrators-get-lpn" doc:id="014956f5-6f9a-4e59-bdb3-d03731c1707e" name="orchestrators-get-lpn" target="responseLPN" />
				<flow-ref doc:name="Call to orchestrators-box-set-response" doc:id="27cf93b4-0229-4065-a1da-e36130b0ca33" name="orchestrators-box-set-response" />
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="orchestrators-box-set-response" doc:id="54dbc305-abb6-48fb-a060-07dd9b46d3d7" >
		<choice doc:name="Choice" doc:id="a64731b8-53c8-42f8-9c46-aac902a7c249" >
			<when expression="#[payload.type_box == 'delivery']">
				<set-payload value='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;    lpn_pending_pick: vars.responseLPN[0].SINSURTIR,&#10;    lpn_pending_picked: vars.responseLPN[0].SURTIDOS,&#10;    lpn_assortments_pallet: vars.responseLPN[0].SurtidosEnPalet,&#10;    delivery_pending_pick: vars.surtidosResponse[0].SinSurtir,&#10;    delivery_pending_picked: vars.surtidosResponse[0].Surtidos,&#10;    delivery_assortments_pallet: vars.surtidosResponse[0].SurtidosEnPalet&#10;}]' doc:name="Set Response" doc:id="064447c1-160a-4ce8-92b6-bf02083c3802" />
			</when>
			<otherwise >
				<set-payload value='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;    lpn_pending_pick: vars.responseLPN[0].SINSURTIR,&#10;    lpn_pending_picked: vars.responseLPN[0].SURTIDOS,&#10;    lpn_assortments_pallet: vars.responseLPN[0].SurtidosEnPalet,&#10;    delivery_pending_pick: "",&#10;    delivery_pending_picked: "",&#10;    delivery_assortments_pallet: ""&#10;}]' doc:name="Set Response" doc:id="71a37cef-03b6-446c-8193-e3fdfebb428a" />
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="orchestrators-get-lpn" doc:id="ef790f56-a0a3-437a-a7df-5c3b48f732c3" >
		<ee:transform doc:name="Set LPN" doc:id="d31e6538-b681-4c35-981d-bec7fcaa1c7f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
if(payload.type_box == 'delivery') vars.surtidosResponse[0].LPN else payload.code]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Set Query" doc:id="0bc97b17-df2c-4782-8cca-7e3b3ddb8a68" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="query" ><![CDATA[%dw 2.0
import modules::pharma
output application/json
var schema = pharma::getSchema(attributes.queryParams.customer_name, p('database.wms.blueyonder.schema'),p('database.wms.mega.schema'))
---
"select * from
(select count(distinct pv2.ctnnum) " SurtidosEnPalet"
   from "++ schema ++".pckwrk_view pv1
   join "++ schema ++".pckwrk_view pv2
     on pv1.schbat = pv2.schbat
    and pv1.ordnum = pv2.ordnum
    and pv1.ordlin = pv2.ordlin
    and pv1.ordsln = pv2.ordsln
    and pv1.subnum = pv2.ctnnum
   join "++ schema ++".inventory_view iv
     on pv2.wrkref = iv.wrkref
    and pv2.wrkref_dtl = iv.wrkref_dtl
    and pv2.ship_line_id = iv.ship_line_id
    and pv2.ctnnum = iv.subnum
    and pv2.wh_id = iv.wh_id
    and pv2.prt_client_id = iv.prt_client_id
    and pv2.prtnum = iv.prtnum
   JOIN "++ schema ++".locmst lm
     on iv.wh_id = lm.wh_id
    and iv.stoloc = lm.stoloc
  where IV.lodnum = :lodnum
    and pv1.wrktyp = 'K'
    and pv1.appqty = 1
    and lm.mov_zone_id in ('10093','10036')) a,
(select count(*) SinSurtir
   from "++ schema ++".pckwrk_view pv
   join "++ schema ++".inventory_pckwrk_view ipv
     on pv.ordnum = ipv.ordnum
    and ipv.lodnum != pv.lodnum
  where pv.wrktyp = 'K'
    and pv.appqty = 0
    and ipv.lodnum = :lodnum) b,
(select count(distinct ipv2.ctnnum) Surtidos
   from "++ schema ++".inventory_pckwrk_view ipv2
   join "++ schema ++".locmst
     on ipv2.stoloc = locmst.stoloc
    and ipv2.wh_id = locmst.wh_id
    and locmst.mov_zone_id not in ('10093', '10036')
        /*and ipv.lodnum != ipv2.lodnum*/
  where ipv2.ordnum in (select distinct ordnum
                          from "++ schema ++".inventory_pckwrk_view ipv3
                         where lodnum = :lodnum)
    and ipv2.subnum like 'CTN%') c"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="client-db-get-lpn" doc:id="d9b88ab7-36ba-4381-8c5e-12fd3ce08dcf" name="common-pharma-selectSub_Flow" />
		<ee:transform doc:name="Set Response" doc:id="016dd72a-2e2b-4178-a457-c02ac97b3ebc" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="orchestrators-get-surtidos" doc:id="f0f3dfab-4942-4501-ab14-11487a11e509" >
		<ee:transform doc:name="Set Code" doc:id="d39e0044-cb02-4952-9b74-2f2788eb704b">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload.code
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Set Query" doc:id="6d45dc0e-f3ac-4bd9-9a90-e22b3a0820dd" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="query" ><![CDATA[%dw 2.0
import modules::pharma
output application/json
var schema = pharma::getSchema(attributes.queryParams.customer_name, p('database.wms.blueyonder.schema'),p('database.wms.mega.schema'))
---
"select
	*
from
	(
	select
		count(distinct pv2.ctnnum) as "SurtidosEnPalet",
		max(iv.lodnum) LPN
	from
		"++ schema ++".pckwrk_view pv1
	join "++ schema ++".pckwrk_view pv2
on
		pv1.schbat = pv2.schbat
		and pv1.ordnum = pv2.ordnum
		and pv1.ordlin = pv2.ordlin
		and pv1.ordsln = pv2.ordsln
		and pv1.subnum = pv2.ctnnum
	join "++ schema ++".inventory_view iv
on
		pv2.wrkref = iv.wrkref
		and pv2.wrkref_dtl = iv.wrkref_dtl
		and pv2.ship_line_id = iv.ship_line_id
		and pv2.ctnnum = iv.subnum
		and pv2.wh_id = iv.wh_id
		and pv2.prt_client_id = iv.prt_client_id
		and pv2.prtnum = iv.prtnum
	JOIN "++ schema ++".locmst lm
on
		iv.wh_id = lm.wh_id
		and iv.stoloc = lm.stoloc
	where
		pv1.ordnum = :ordnum
		and pv1.wrktyp = 'K'
		and pv1.appqty = 1
		and lm.mov_zone_id in ('10093', '10036')) inPal,
	(
	select
		count(distinct pv2.ctnnum) as "Surtidos"
	from
		"++ schema ++".pckwrk_view pv1
	join "++ schema ++".pckwrk_view pv2
on
		pv1.schbat = pv2.schbat
		and pv1.ordnum = pv2.ordnum
		and pv1.ordlin = pv2.ordlin
		and pv1.ordsln = pv2.ordsln
		and pv1.subnum = pv2.ctnnum
	join "++ schema ++".inventory_view iv
on
		pv2.wrkref = iv.wrkref
		and pv2.wrkref_dtl = iv.wrkref_dtl
		and pv2.ship_line_id = iv.ship_line_id
		and pv2.ctnnum = iv.subnum
		and pv2.wh_id = iv.wh_id
		and pv2.prt_client_id = iv.prt_client_id
		and pv2.prtnum = iv.prtnum
	JOIN "++ schema ++".locmst lm
on
		iv.wh_id = lm.wh_id
		and iv.stoloc = lm.stoloc
	where
		pv1.ordnum = :ordnum
		and pv1.wrktyp = 'K'
		and pv1.appqty = 1
		and lm.mov_zone_id not in ('10093', '10036')) inPal2,
	(
	select
		count(*) "SinSurtir"
	from
		"++ schema ++".pckwrk_view
	where
		ordnum = :ordnum
		and wrktyp = 'K'
		and appqty = 0) "Mis""]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="client-db-get-box" doc:id="7f7e3b79-c3a2-4bb5-8550-2fcdf989ac4f" name="common-pharma-selectSub_Flow" />
		<ee:transform doc:name="Set Response" doc:id="345a0cb1-1ec5-4c5f-8607-bec6f20ef55b">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
</mule>
