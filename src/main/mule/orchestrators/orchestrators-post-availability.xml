<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<sub-flow name="orchestrators-update-availability" doc:id="9de8a181-03dc-4282-8646-dec20083d7c8" >
<!-- [STUDIO:"Payload"]		<logger level="INFO" doc:name="Payload" doc:id="4153579e-e855-471f-bd59-07630cedd630" message="payloadXML: #[payload] " /> [STUDIO] -->
		<ee:transform doc:name="get Skus" doc:id="c7a34687-61f3-4324-b958-cd1dcfbd1680" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
("'" ++((payload.skus) joinBy "," ) replace "," with("','") ++ "'")]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="arrayAux" ><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
<ee:transform doc:name="Set Query" doc:id="9fe9ae85-71bd-457f-a6db-2e5db808df54" >
            <ee:message >
            </ee:message>
            <ee:variables >
                <ee:set-variable variableName="queryAvailability" ><![CDATA[%dw 2.0
output application/json
var DBAQA = p('database.wms.blueyonder.schema')
---
"WITH AREA_EXCL AS (SELECT DISTINCT POLDAT.RTSTR1
FROM DBAQA.POLDAT
WHERE POLCOD = 'VAR-TRAXION'
AND POLVAR = 'QUERY_DISP'
AND POLVAL = 'AREAS'),
UBIC_EXCL AS (SELECT DISTINCT POLDAT.RTSTR1
FROM DBAQA.POLDAT
WHERE POLCOD = 'VAR-TRAXION'
AND POLVAR = 'QUERY_DISP'
AND POLVAL = 'UBICACIONES'),
TODO AS (SELECT IV.WH_ID,
SUM(IV.UNTQTY) CANTIDAD,
IV.UNTCAS,

(
  CASE
    WHEN IV.UNTPAK > 1 THEN
      'PQ'
    ELSE
      'PZ'
  END) PAQUETEO,
(
  CASE
    WHEN IV.UNTPAK = 1 THEN
      1
    ELSE
      IV.UNTPAK
  END) CANTPZPCK,
IV.FTPCOD,
IV.PRTNUM CLAVE,
IV.EXPIRE_DTE EXPIRA,
IV.LOTNUM LOTE
FROM
  DBAQA.INVENTORY_VIEW IV
  LEFT JOIN DBAQA.RCVLIN RCVLIN
  ON IV.RCVKEY = RCVLIN.RCVKEY
  LEFT JOIN DBAQA.RCVTRK RCTK
  ON RCVLIN.TRKNUM = RCTK.TRKNUM
  LEFT JOIN DBAQA.TRLR TRL
  ON RCTK.TRLR_ID = TRL.TRLR_ID
  JOIN DBAQA.LOCMST
  ON IV.STOLOC = LOCMST.STOLOC
WHERE
  IV.PRTNUM IN (  " ++ payload ++ ")
  AND IV.INVSTS = ('DISP')
  AND (TRL.TRLR_STAT = 'D'
  OR TRL.TRLR_STAT IS NULL)
  AND IV.SHIP_LINE_ID IS NULL
  AND LOCMST.ARECOD NOT IN (
    SELECT
      *
    FROM
       AREA_EXCL
  )
  AND IV.WH_ID = 'AVIOR-27'
  AND LOCMST.STOLOC NOT IN (
    SELECT
      *
    FROM
      UBIC_EXCL
  )
GROUP BY
  IV.WH_ID, IV.UNTPAK, IV.UNTCAS, IV.FTPCOD, IV.PRTNUM, IV.EXPIRE_DTE, IV.LOTNUM
ORDER BY
  IV.EXPIRE_DTE, IV.LOTNUM), ORDS AS (
    SELECT
      SUM(ORD_LINE.ORDQTY) CANT_COMP,
      ORD_LINE.PRTNUM
    FROM
      DBAQA.ORD_LINE
      JOIN DBAQA.SHIPMENT_LINE
      ON SHIPMENT_LINE.PRTNUM = ORD_LINE.PRTNUM
      AND SHIPMENT_LINE.WH_ID = ORD_LINE.WH_ID
      AND SHIPMENT_LINE.CLIENT_ID = ORD_LINE.CLIENT_ID
      AND SHIPMENT_LINE.ORDNUM = ORD_LINE.ORDNUM
      AND SHIPMENT_LINE.ORDLIN = ORD_LINE.ORDLIN
      AND SHIPMENT_LINE.ORDSLN = ORD_LINE.ORDSLN
      AND SHIPMENT_LINE.LINSTS != 'B'
    WHERE
      ORD_LINE.ORDNUM NOT IN (
        SELECT
          DISTINCT PCKWRK_VIEW.ORDNUM
        FROM
          DBAQA.PCKWRK_VIEW
        WHERE
          WRKTYP NOT IN ('M', 'T', 'G', 'E', 'R', 'D', 'S')
      )
    GROUP BY
      ORD_LINE.PRTNUM
  ), PCKS AS (
    SELECT
      SUM(PWV.PCKQTY - PWV.APPQTY) PCKQTY,
      PWV.UNTCAS,
      PWV.PRTNUM
    FROM
      DBAQA.PCKWRK_VIEW PWV
    WHERE
      PWV.APPQTY < PWV.PCKQTY
      AND PWV.WRKTYP = 'P'
      AND PWV.INVSTS = 'DISP'
      AND PWV.SRCARE NOT IN (
        SELECT
          *
        FROM
          AREA_EXCL
      )
    GROUP BY
      UNTCAS, PRTNUM
  ), TODO2 AS (
    SELECT
      NVL(SUM(CANTIDAD) OVER(PARTITION BY CLAVE ORDER BY EXPIRA,
      LOTE DESC ROWS BETWEEN UNBOUNDED PRECEDING
      AND 1 PRECEDING),
      0) AS SUMOV,
      FTPCOD,
      CANT_COMP,
      NVL(CANT_COMP,
      0) + NVL(PCKS.PCKQTY,
      0) SUM_COMP,
      CANTIDAD,
      CANTIDAD - CASE
        WHEN (NVL(CANT_COMP, 0) + NVL(PCKS.PCKQTY, 0)) = 0 THEN
          0
        WHEN NVL(SUM(CANTIDAD) OVER(PARTITION BY CLAVE ORDER BY EXPIRA, LOTE DESC ROWS BETWEEN UNBOUNDED PRECEDING
        AND 1 PRECEDING), 0) >= (NVL(CANT_COMP, 0) + NVL(PCKS.PCKQTY, 0)) THEN
          0
        WHEN (NVL(CANT_COMP, 0) + NVL(PCKS.PCKQTY, 0)) >= SUM(CANTIDAD) OVER(PARTITION BY CLAVE ORDER BY EXPIRA, LOTE DESC ROWS BETWEEN UNBOUNDED PRECEDING
        AND 1 PRECEDING) THEN
          ((NVL(CANT_COMP, 0) + NVL(PCKS.PCKQTY, 0)) - NVL(SUM(CANTIDAD) OVER(PARTITION BY CLAVE ORDER BY EXPIRA, LOTE DESC ROWS BETWEEN UNBOUNDED PRECEDING
          AND 1 PRECEDING), 0))
        ELSE
          ((NVL(CANT_COMP, 0) + NVL(PCKS.PCKQTY, 0)) - NVL(SUM(CANTIDAD) OVER(PARTITION BY CLAVE ORDER BY EXPIRA, LOTE DESC ROWS BETWEEN UNBOUNDED PRECEDING
          AND 1 PRECEDING), 0))
      END STOCK_DISPONIBLE,
      WH_ID,
      CLAVE,
      TODO.UNTCAS,
      PAQUETEO,
      CANTPZPCK,
      EXPIRA
    FROM
      TODO
      LEFT JOIN ORDS
      ON ORDS.PRTNUM = TODO.CLAVE
      LEFT JOIN PCKS
      ON PCKS.PRTNUM = TODO.CLAVE
      AND PCKS.UNTCAS = TODO.UNTCAS
  ), TODO_F AS (
    SELECT
      SUMOV,
      FTPCOD,
      TODO2.CANT_COMP,
      CANTIDAD,
      CASE
        WHEN (STOCK_DISPONIBLE < 0) THEN
          0
        WHEN (STOCK_DISPONIBLE = 0) THEN
          (CANTIDAD - (CANT_COMP - SUMOV))
        ELSE
          STOCK_DISPONIBLE
      END STOCK_DISPONIBLE,
      SUM_COMP,
      CLAVE,
      UNTCAS,
      PAQUETEO,
      CANTPZPCK,
      EXPIRA
    FROM
      TODO2
  )
  SELECT
    CLAVE,
    FTPCOD,
    MIN(EXPIRA) EXPIRACION_MIN,
    UNTCAS,
    PAQUETEO,
    CANTPZPCK,
    SUM(CANTIDAD) CANT_INV,
    SUM(STOCK_DISPONIBLE) STOCK_DISP,
    ROUND(SUM(STOCK_DISPONIBLE) / CANTPZPCK) PACKDISP,
    SUM_COMP COMPROMETIDO
  FROM
    TODO_F
  GROUP BY  
    FTPCOD,
        CLAVE,
    UNTCAS,
    PAQUETEO,
    CANTPZPCK,
    SUM_COMP,
    CANT_COMP"]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
		<flow-ref doc:name="Call to client-db-wms-get-availability" doc:id="473e1111-8e9a-4c7e-aa9d-dba96c4d8d27" name="client-db-wms-get-availability" />
		<set-payload value="#[%dw 2.0&#10;output application/json&#10;---&#10;payload]" doc:name="to Json" doc:id="25d92b1d-53c1-4ae1-bd5a-41c9cd363b5f" />
<!-- [STUDIO:"Response"]		<logger level="INFO" doc:name="Response" doc:id="30ca8b17-36de-42c8-800e-d90959eae24f" message="Response XML: #[payload]" /> [STUDIO] -->
	</sub-flow>
</mule>
